{"version":3,"sources":["Trending/Components/Post/Comments/NewComment/NewComment.module.css","Trending/Components/Post/Comments/Comments.module.css","Trending/Components/Post/Post.module.css","components/StarProfiles/StarProfiles.module.css","Trending/Components/Post/Comments/NewComment/NewComment.js","Trending/Components/Post/Comments/Comments.js","Trending/Components/Post/Post.js","Trending/Containers/Posts/Posts.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","components/StarProfiles/StarProfiles.js","Trending/Trending.js","pages/Trending.js"],"names":["module","exports","newComment","props","className","cssClasses","from","onSubmit","submit","noValidate","autoComplete","TextField","comment","style","margin","value","val","onChange","change","id","label","variant","Button","btn","marginTop","type","color","useStyles","makeStyles","theme","purple","palette","getContrastText","deepPurple","backgroundColor","Comment","useState","cmtText","setCmtText","cmts","setCmts","userCTX","useContext","UserState","classes","useEffect","fetch","method","headers","body","JSON","stringify","postId","then","res","json","console","log","catch","err","comments","map","Divider","top","Avatar","avatar","join","user","name","Typography","padding","component","paragraph","text","NewComment","e","target","preventDefault","trim","data","userId","_id","msg","newCmt","imageUrl","prevCmts","lastLine","root","maxWidth","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","Post","expanded","setExpanded","liked","setLiked","likesCount","setLikesCount","displayTopics","topics","split","topic","index","gutterBottom","date","slice","likedClasses","Paper","elevation","Card","to","postUserId","textDecoration","CardHeader","owner","title","subheader","CardContent","imgUrl","postImage","src","alt","CardActions","disableSpacing","IconButton","onClick","prevCount","clsx","Collapse","in","timeout","unmountOnExit","Posts","userState","posts","setPosts","displayPosts","post","postText","postTopics","postedBy","likes","includes","ListItemAvatar","React","ref","other","_objectWithoutProperties","context","ListContext","_extends","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","width","StarProfiles","square","star","List","ListItem","ListItemText","primary","secondary","Trending","Container","textAlign","Grid","container","spacing","justifyContent","Hidden","smDown","item","md","sm","TrendingPage"],"mappings":"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","file":"static/js/5.521f8499.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewComment_form__3RbXb\",\"comment\":\"NewComment_comment__2jxS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comments_Comment__yI8uc\",\"top\":\"Comments_top__1tTIA\",\"avatar\":\"Comments_avatar__2HrdX\",\"name\":\"Comments_name__2Q1Tb\",\"lastLine\":\"Comments_lastLine__2zm8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postImage\":\"Post_postImage__1sr2v\",\"red\":\"Post_red__2Knt5\",\"topic\":\"Post_topic__2gNEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"StarProfiles_star__C2V7J\"};","import TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport cssClasses from \"./NewComment.module.css\";\r\n\r\nconst newComment = (props) => {\r\n  return (\r\n    <form className={cssClasses.from} onSubmit={props.submit} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        className={cssClasses.comment}\r\n        style={{ margin: \"0 5px 10px 30px\" }}\r\n        value={props.val}\r\n        onChange={props.change}\r\n        id=\"outlined-basic\"\r\n        label=\"Add a comment\"\r\n        variant=\"outlined\"\r\n      />\r\n      <Button\r\n        className={cssClasses.btn}\r\n        style={{ marginTop: \"8.5px\" }}\r\n        type=\"submit\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        Post\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default newComment;\r\n","import { Fragment, useState, useContext, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport NewComment from \"./NewComment/NewComment\";\r\nimport UserState from \"../../../../store/user-state\";\r\nimport cssClasses from \"./Comments.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nexport default function Comment(props) {\r\n  const [cmtText, setCmtText] = useState(\"\");\r\n  const [cmts, setCmts] = useState([]);\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getComments\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ postId: props.id }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [props.id]);\r\n\r\n  const commentTextChangeHandler = (e) => {\r\n    setCmtText(e.target.value);\r\n  };\r\n\r\n  const commentsSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cmtText.trim() === \"\") {\r\n      console.log(\"Comment empty\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      text: cmtText,\r\n      postId: props.id,\r\n      userId: userCTX.user._id,\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/comment\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setCmtText(\"\");\r\n        if(res.msg === \"success\") {\r\n          const newCmt = {\r\n            text: data.text,\r\n            user: {\r\n              imageUrl: userCTX.user.imageUrl,\r\n              name: userCTX.user.name\r\n            }\r\n          }\r\n          setCmts((prevCmts) => {\r\n            const updatedCmts = [newCmt, ...prevCmts];\r\n            return updatedCmts;\r\n          });\r\n        } else {\r\n          console.log(\"comment failed\");\r\n        }\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const cmts = [{name: \"Swaraj Das\", text: \"This is a comment\"}, {name: \"Swaraj Das\", text: \"This is a comment\"}];\r\n\r\n  const comments = cmts.map((comment) => {\r\n    return (\r\n      <div className={cssClasses.Comment}>\r\n        <Divider />\r\n        <div className={cssClasses.top}>\r\n          <Avatar className={[classes.purple, cssClasses.avatar].join(\" \")}>\r\n            {comment.user.name[0]}\r\n          </Avatar>\r\n          <div>\r\n            <Typography\r\n              className={cssClasses.name}\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n              variant=\"subtitle2\"\r\n              component=\"p\"\r\n              paragraph\r\n            >\r\n              {comment.user.name}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              paragraph\r\n              style={{ padding: \"0\", margin: \"0\" }}\r\n            >\r\n              {comment.text}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <NewComment\r\n        val={cmtText}\r\n        change={commentTextChangeHandler}\r\n        submit={commentsSubmitHandler}\r\n      />\r\n      {comments}\r\n      <Divider className={cssClasses.lastLine} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";  \r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\nimport UserState from \"../../../store/user-state\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport cssClasses from \"./Post.module.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    marginBottom: 15,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function Post(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [liked, setLiked] = useState(props.liked);\r\n  const [likesCount, setLikesCount] = useState(props.likesCount);\r\n\r\n  const userCTX = useContext(UserState);\r\n  const classes = useStyles();\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  \r\n  const topics = props.topics[0].split(',');\r\n  const displayTopics = topics.map((topic, index) => {\r\n    return (\r\n      <span\r\n        key={index}\r\n        variant=\"h6\"\r\n        component=\"p\"\r\n        className={cssClasses.topic}\r\n        gutterBottom\r\n      >\r\n        #{topic} &nbsp;\r\n      </span>\r\n    );\r\n  });\r\n\r\n  const fulldate = props.date;\r\n  const date = fulldate.slice(0, 10);\r\n\r\n  let likedClasses = \"\";\r\n  if (liked) {\r\n    likedClasses = cssClasses.red;\r\n  }\r\n\r\n  const likePostHandler = () => {\r\n    if (!liked) {\r\n      setLiked(true);\r\n      setLikesCount((prevCount) => prevCount + 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/likePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(false);\r\n            setLikesCount((prevCount) => prevCount - 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(false);\r\n          setLikesCount((prevCount) => prevCount - 1);\r\n        });\r\n    } else {\r\n      setLiked(false);\r\n      setLikesCount((prevCount) => prevCount - 1);\r\n\r\n      const data = {\r\n        postId: props.id,\r\n        userId: userCTX.user._id,\r\n      };\r\n      fetch(\"/unlikePost\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.msg === \"Server Error\") {\r\n            setLiked(true);\r\n            setLikesCount((prevCount) => prevCount + 1);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          setLiked(true);\r\n          setLikesCount((prevCount) => prevCount + 1);\r\n        });\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      \r\n      <Card className={classes.root}>\r\n        <Link to={`/app/peoplesprofile/${props.postUserId}`} style={{textDecoration: 'none'}}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              {props.owner[0]}\r\n            </Avatar>\r\n          }\r\n          title={props.owner}\r\n          subheader={date}\r\n        />\r\n        </Link>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {props.text}\r\n          </Typography>\r\n          {displayTopics}\r\n        </CardContent>\r\n        {props.imgUrl && (\r\n          <img\r\n            className={cssClasses.postImage}\r\n            src={`/${props.imgUrl}`}\r\n            alt=\"Post upload\"\r\n          />\r\n        )}\r\n        <CardActions disableSpacing>\r\n          <IconButton onClick={likePostHandler} aria-label=\"add to favorites\">\r\n            <ThumbUpIcon className={likedClasses} />\r\n          </IconButton>{\" \"}\r\n          &nbsp; {likesCount} Likes\r\n          <IconButton\r\n            className={clsx(classes.expand, {\r\n              [classes.expandOpen]: expanded,\r\n            })}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <QuestionAnswerIcon />\r\n          </IconButton>\r\n          Comments &nbsp;\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Comments id={props.id} />\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Post from \"../../Components/Post/Post\";\r\nimport userState from \"../../../store/user-state\";\r\n\r\nconst Posts = () => {\r\n  const userCTX = useContext(userState);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n  \r\n    fetch(`/trendingPosts`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.msg) {\r\n          console.log(\"Something went wrong\");\r\n          return;\r\n        }\r\n        setPosts(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const userId = userCTX.user._id;\r\n\r\n  const displayPosts = posts.map((post) => {\r\n    return (\r\n      <Post\r\n        key={post._id}\r\n        id={post._id}\r\n        text={post.postText}\r\n        topics={post.postTopics}\r\n        owner={post.postedBy.name}\r\n        likesCount={post.likesCount}\r\n        imgUrl={post.imageUrl}\r\n        date={post.date}\r\n        liked={post.likes.includes(userId)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div>{displayPosts}</div>;\r\n};\r\nexport default Posts;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nimport cssClasses from './StarProfiles.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: '#E5E5E5',\r\n  },\r\n}));\r\n\r\nexport default function StarProfiles() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper style={{backgroundColor: \"#E5E5E5\"}} variant=\"outlined\" square >\r\n      <p className={cssClasses.star}>Star Profiles</p>\r\n      <Divider />\r\n      <List className={classes.root}>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              S\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Swaraj Das\" secondary=\"Turtle Investor\" />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              T\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Taral Sharma\" secondary=\"Bitcoins\" />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              V\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Vijiyant Prateek\" secondary=\"Stock Market Influencer\" />\r\n        </ListItem>\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n","import Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Posts from \"./Containers/Posts/Posts\";\r\nimport StarProfiles from \"../components/StarProfiles/StarProfiles\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\n\r\nconst Trending = () => {\r\n  return (\r\n    <Container>\r\n      <Typography\r\n        variant=\"h3\"\r\n        style={{ color: \"#086cdf\", textAlign: \"center\", marginBottom: \"20px\" }}\r\n        component=\"h1\"\r\n        gutterBottom\r\n      >\r\n        Trending\r\n      </Typography>\r\n      <Grid container spacing={4} style={{width: '100%', justifyContent:\"center\"}}>\r\n        <Hidden smDown>\r\n          <Grid item md={3}></Grid>\r\n        </Hidden>\r\n        <Grid item sm={12} md={6} style={{width: '100%', padding: 0}} >\r\n          <Posts />\r\n        </Grid>\r\n        <Hidden smDown>\r\n          <Grid item sm={3}>\r\n            <StarProfiles />\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Trending;\r\n","import Trending from '../Trending/Trending';\r\n\r\nconst TrendingPage = () => <Trending />;\r\n\r\nexport default TrendingPage;"],"sourceRoot":""}